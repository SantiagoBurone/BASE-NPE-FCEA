setwd("C:/Users/sburone/Documents/Pedidos/Pedido UPC")
rm(list=ls())
require(foreign)
require(plyr)
#Cargo la base de datos
base<-read.csv("C:/Users/sburone/Documents/Base Enero/base_NPE_v_1_1_1.csv")

#Genero maxima fecha egreso
max_fech_eg<-ddply(.data=base, .variables = c("ESTCI"), .fun=function(x){max(x$FECHAING)})
colnames(max_fech_eg) <- c("ESTCI","Max_fech_eg")
base <- join(base,max_fech_eg)

#Actividades integradoras (Nota Aprobación)
base <- base[order(base$ESTCI),]
s<-ncol(base)
base[, c(s+1)]<-" "
base[c(1), c(s+1)]<-as.character(base[1, c(s+1)])

for (i in nrow(base):2){
  
  base[c(i), c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="Aprobado/Revalida (sin nota)") | (base[c(i),c("resultado_actividad")]=="curso exonerado") | (base[c(i),c("resultado_actividad")]=="examen aprobado") )), (paste(base[c(i),c("NOTAMATERIA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))
  
}

base[1, c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="Aprobado/Revalida (sin nota)") | (base[c(i),c("resultado_actividad")]=="curso exonerado") | (base[c(i),c("resultado_actividad")]=="examen aprobado") )), (paste(base[c(i),c("NOTAMATERIA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))

base$Notas_Aprobaciones_Act_Int<-base[, c(s+1)]
base[, c(s+1)]<-NULL



#Actividades integradoras (año cursado) (NO APROBADAS)

base <- base[order(base$ESTCI),]
s<-ncol(base)
base[, c(s+1)]<-" "
base[c(1), c(s+1)]<-as.character(base[1, c(s+1)])

for (i in nrow(base):2){
  
  base[c(i), c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("FECHA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))
  
}

base[1, c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("FECHA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))

base$Fecha_Act_Int_NO_APROBADA<-base[, c(s+1)]
base[, c(s+1)]<-NULL


#Actividades integradoras (no aprobadas) (NOTA)

base <- base[order(base$ESTCI),]
s<-ncol(base)
base[, c(s+1)]<-" "
base[c(1), c(s+1)]<-as.character(base[1, c(s+1)])

for (i in nrow(base):2){
  
  base[c(i), c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("NOTAMATERIA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))
  
}

base[1, c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("NOTAMATERIA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))

base$Notas_No_Aprobaciones_Act_Int<-base[, c(s+1)]
base[, c(s+1)]<-NULL

#Fecha Actividades Integradoras Aprobadas

base <- base[order(base$ESTCI),]
s<-ncol(base)
base[, c(s+1)]<-" "
base[c(1), c(s+1)]<-as.character(base[1, c(s+1)])

for (i in nrow(base):2){
  
  base[c(i), c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen aprobado") | (base[c(i),c("resultado_actividad")]=="Aprobado/Revalida (sin nota)") | (base[c(i),c("resultado_actividad")]=="curso exonerado"))) , (paste(base[c(i),c("FECHA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))
  
}

base[1, c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen aprobado") | (base[c(i),c("resultado_actividad")]=="Aprobado/Revalida (sin nota)") | (base[c(i),c("resultado_actividad")]=="curso exonerado"))) , (paste(base[c(i),c("FECHA")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))

base$Fecha_Act_Int_APROBADA<-base[, c(s+1)]
base[, c(s+1)]<-NULL


#Actividades integradoras (no aprobadas) (MATERIAS)

base <- base[order(base$ESTCI),]
s<-ncol(base)
base[, c(s+1)]<-" "
base[c(1), c(s+1)]<-as.character(base[1, c(s+1)])

for (i in nrow(base):2){
  
  base[c(i), c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("NOMMAT")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))
  
}

base[1, c(s+1)]<-ifelse(  ((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]) & (base[c(i),c("Act_Int")]==1) & ((base[c(i),c("resultado_actividad")]=="examen perdido") | (base[c(i),c("resultado_actividad")]=="curso no exonerado"))) , (paste(base[c(i),c("NOMMAT")], (base[c(i+1),c(s+1)]), sep="&")), ifelse((base[c(i),c("ESTCI")]==base[c(i+1), c("ESTCI")]),    (base[c(i+1),c(s+1)]), NA))

base$No_Aprobaciones_Act_Int<-base[, c(s+1)]
base[, c(s+1)]<-NULL



#Me quedo con una observacion por CI
base_sd<-base[!duplicated(base$ESTCI),]
#Tiro variables que no sirven
tirar<-c("creditos_aprob_EC", "acts_aprob_EC", "dups", "cred_obt_EC","creditos_aprob_ADM", "acts_aprob_ADM", "cred_obt_ADM","creditos_aprob_MC", "acts_aprob_MC", "cred_obt_MC","creditos_aprob_Act_Int", "acts_aprob_Act_Int", "cred_obt_Act_Int", "creditos_aprob_Cont", "acts_aprob_Cont", "cred_obt_Cont", "creditos_aprob_Social", "acts_aprob_Social", "cred_obt_Social","creditos_aprob_Juridica", "acts_aprob_Juridica", "cred_obt_Juridica", "X.1", "X", "X.x", "MAT", "NOMMAT", "FECHA", "PER", "T", "NOTAMATERIA", "CRCURR", "NOMBRE", "CELULAR", "FECHAMATERIA", "resultado_actividad", "cred_obt", "notaspos", "inic_tra", "anio0", "anio1", "anio2", "anio3", "anio4", "anio5", "X.y", "res_marzo", "ocup", "ocup_ing", "conyug", "cony_ing", "cony_pad", "Cony_pad_ing", "hijo_viv", "Hijo_ing", "Herm_ing", "abuelo", "Abu_ing", "suegro", "Sueg_ing", "fam_otro", "Fam_ing", "est_otro", "Est_ing", "per_otro", "Per_ing", "abuelo.1", "Abu_ing.1", "suegro.1", "Sueg_ing.1", "fam_otro.1", "Fam_ing.1", "est_otro.1", "Est_ing.1", "per_otro.1", "Per_ing.1", "edu_prim.1", "cat_oc_est", "ocup_est", "Met_Cuant", "Econ", "Cont", "Admin", "Juridica", "Social", "Act_Int", "CICLO", "FECHAING", "sec_6", "tip_inst_sexto")
base_sd2<-base_sd[,-which(names(base_sd) %in% tirar)]

#Edad
base_sd2$Edad_al_ingreso<-(base_sd2$Min_Fech_ing)-(floor(as.integer(as.character(base_sd2$fecha_nac))/10000))
rm(max_fech_eg, base_sd)
#Genero dummy para casos en que estan inscriptos a mas de una carrera
base_sd2$varias_carreras<-ifelse(base_sd2$Min_Fech_ing<base_sd2$Max_fech_eg,1,0)
#Transformacion CI
base_sd2$ESTCI<-as.integer(base_sd2$ESTCI)
base_sd2$ESTCI<-log(base_sd2$ESTCI)
prueba<-base_sd2
prueba$ESTCI<-exp(prueba$ESTCI)
prueba<-base[which(base$ESTCI==4951749),]
prueba<-prueba[,170:189]
#Guardo la base de datos
write.csv(base_sd2, "base_estudiantes_15_febrero.csv")



